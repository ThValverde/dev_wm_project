# Generated by Django 4.2.7 on 2025-06-09 02:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='endereço de e-mail')),
                ('nome_completo', models.CharField(blank=True, max_length=150)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome da casa de idosos', max_length=100, unique=True, verbose_name='Nome do Grupo')),
                ('senha_hash', models.CharField(max_length=128)),
                ('codigo_acesso', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Código de Acesso do Grupo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação do Grupo')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização do Grupo')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grupos_administrados', to=settings.AUTH_USER_MODEL, verbose_name='Administrador do Grupo')),
            ],
        ),
        migrations.CreateModel(
            name='PerfilUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissao', models.CharField(choices=[('ADMIN', 'Administrador'), ('MEMBRO', 'Membro')], default='MEMBRO', max_length=10)),
                ('grupo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='membros', to='api.grupo')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Medicamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('quantidade_estoque', models.PositiveIntegerField(default=0, help_text='Número de caixas/frascos em estoque.', verbose_name='Quantidade em Estoque (Embalagens)')),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicamentos', to='api.grupo')),
            ],
        ),
        migrations.CreateModel(
            name='Idoso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_completo', models.CharField(max_length=255)),
                ('data_nascimento', models.DateField()),
                ('peso', models.DecimalField(decimal_places=2, help_text='Peso em kg', max_digits=5)),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outro / Não informar')], max_length=1, verbose_name='Gênero')),
                ('cpf', models.CharField(max_length=11, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=9, null=True, verbose_name='RG')),
                ('cartao_sus', models.CharField(max_length=20, verbose_name='Cartão Nacional de Saúde (CNS)')),
                ('possui_plano_saude', models.BooleanField(default=False, verbose_name='Possui plano de saúde?')),
                ('plano_saude', models.CharField(blank=True, choices=[('BRA', 'Bradesco Saúde'), ('UNI', 'Unimed'), ('OUT', 'Outro')], max_length=3, null=True, verbose_name='Plano de Saúde')),
                ('plano_saude_outro', models.CharField(blank=True, max_length=100, null=True, verbose_name='Qual outro plano?')),
                ('numero_carteirinha_plano', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número da Carteirinha (Plano de Saúde)')),
                ('doencas', models.TextField(blank=True, help_text='Doenças pré-existentes', verbose_name='Doenças')),
                ('condicoes', models.TextField(blank=True, help_text='Condições especiais ou alergias', verbose_name='Condições')),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='idosos_da_casa', to='api.grupo')),
            ],
        ),
        migrations.CreateModel(
            name='ContatoParente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome do Parente')),
                ('parentesco', models.CharField(choices=[('FI', 'Filho(a)'), ('NE', 'Neto(a)'), ('OU', 'Outro')], max_length=2, verbose_name='Parentesco')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='E-mail')),
                ('idoso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contatos', to='api.idoso')),
            ],
            options={
                'verbose_name': 'Contato de Parente',
                'verbose_name_plural': 'Contatos de Parentes',
            },
        ),
        migrations.CreateModel(
            name='AdministracaoMedicamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horario_previsto', models.DateTimeField()),
                ('foi_administrado', models.BooleanField(default=False)),
                ('nao_tomou_motivo', models.CharField(blank=True, help_text='Preencher se o idoso não tomou o medicamento (NT)', max_length=255, null=True)),
                ('data_hora_administracao', models.DateTimeField(blank=True, help_text='Horário exato em que foi administrado', null=True)),
                ('enfermeiro_responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('idoso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicacoes', to='api.idoso')),
                ('medicamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.medicamento')),
            ],
            options={
                'verbose_name': 'Administração de Medicamento',
                'verbose_name_plural': 'Administrações de Medicamentos',
                'ordering': ['horario_previsto'],
            },
        ),
        migrations.AddConstraint(
            model_name='medicamento',
            constraint=models.UniqueConstraint(fields=('grupo', 'nome'), name='unique_medicamento_por_grupo'),
        ),
        migrations.AddConstraint(
            model_name='idoso',
            constraint=models.UniqueConstraint(fields=('grupo', 'cpf'), name='unique_cpf_por_grupo'),
        ),
        migrations.AddConstraint(
            model_name='idoso',
            constraint=models.UniqueConstraint(fields=('grupo', 'rg'), name='unique_rg_por_grupo'),
        ),
        migrations.AddConstraint(
            model_name='idoso',
            constraint=models.UniqueConstraint(fields=('grupo', 'cartao_sus'), name='unique_sus_por_grupo'),
        ),
    ]
